image: rocker/verse:latest

variables:
  GIT_DEPTH: 10
  REPO_NAME: "https://packagemanager.rstudio.com/all/__linux__/focal/latest"
  R_LIBS: "ci/lib"

cache:
  key: global-cache
  paths:
      - ${R_LIBS}

stages:
  - build
  - test
  - pkgdown-move
  - deploy

building:
  stage: build
  allow_failure: true
  script:
    - apt-get update -qq && apt-get install -y libharfbuzz-dev libfribidi-dev libgdal-dev libudunits2-dev libproj-dev
    - echo "Library path for packages :" $R_LIBS
    - mkdir -p $R_LIBS
    - Rscript -e 'install.packages("remotes")'
    - Rscript -e 'install.packages("rcmdcheck")'
    - Rscript -e 'install.packages("devtools")'
    - Rscript -e 'install.packages("xlsx")'
    - Rscript -e 'remotes::install_deps(dependencies = TRUE)'
    - Rscript -e 'remotes::install_local(upgrade = "never")'
    - R -e 'devtools::check(error_on = "error", check_dir = "check")'

# To have the coverage percentage appear as a gitlab badge follow these
# instructions:
# https://docs.gitlab.com/ee/user/project/pipelines/settings.html#test-coverage-parsing
# The coverage parsing string is
# Coverage: \d+\.\d+

coverage:
    stage: test
    allow_failure: true
    when: on_success
    only:
        - master
        - production
    script:
        - apt-get update -qq && apt-get install -y libharfbuzz-dev libfribidi-dev libgdal-dev libudunits2-dev libproj-dev
        - Rscript -e 'remotes::install_cran(c("covr", "DT"), upgrade = "never")'
        - Rscript -e 'install.packages(c("bs4Dash", "collections", "comprehenr", "ggtext", "openxlsx", "sf", "shinyalert", "shinycssloaders", "shinyWidgets", "reader"))'
        - Rscript -e 'covr::gitlab(quiet = FALSE)'
    artifacts:
        paths:
            - public
        expire_in: 30 days
    coverage: '/Coverage: \d+\.\d+/'

# To produce a code coverage report as a GitLab page see
# https://about.gitlab.com/2016/11/03/publish-code-coverage-report-with-gitlab-pages/

integration-test:
    stage: pkgdown-move
    only:
        - test-ci
    script:
        - mkdir -p public/test
        - 'curl --location --output artifacts.zip --header "JOB-TOKEN: $CI_JOB_TOKEN" "https://forge.agriculture.rie.gouv.fr/gitlab//api/v4/projects/$CI_PROJECT_ID/jobs/artifacts/master/download?job=pages" &&
          unzip artifacts.zip &&
          rm artifacts.zip &&
          echo "copied master artifacts" ||
          echo "copied master artifacts failed"'
        - 'curl --location --output artifacts.zip --header "JOB-TOKEN: $CI_JOB_TOKEN" "https://forge.agriculture.rie.gouv.fr/gitlab//api/v4/projects/$CI_PROJECT_ID/jobs/artifacts/production/download?job=pages" &&
          unzip artifacts.zip &&
          rm artifacts.zip &&
          echo "copied production artifacts" ||
          echo "copied production artifacts failed"'
        - cp -r docs/* public/test
    artifacts:
        paths:
            - public
        expire_in: 30 days

integration-production:
    stage: pkgdown-move
    only:
        - production
    script:
        - mkdir -p public/production
        - 'curl --location --output artifacts.zip --header "JOB-TOKEN: $CI_JOB_TOKEN" "https://forge.agriculture.rie.gouv.fr/gitlab//api/v4/projects/$CI_PROJECT_ID/jobs/artifacts/master/download?job=pages" &&
          unzip artifacts.zip &&
          rm artifacts.zip &&
          echo "copied master artifacts" ||
          echo "copied master artifacts failed"'
        - cp -r docs/* public/production
    artifacts:
        paths:
            - public
        expire_in: 30 days

integration-master:
    stage: pkgdown-move
    only:
        - master
    script:
        - mkdir -p public
        - 'curl --location --output artifacts.zip --header "JOB-TOKEN: $CI_JOB_TOKEN" "https://forge.agriculture.rie.gouv.fr/gitlab//api/v4/projects/$CI_PROJECT_ID/jobs/artifacts/production/download?job=pages" &&
          unzip artifacts.zip &&
          rm artifacts.zip &&
          echo "copied production artifacts" ||
          echo "copied production artifacts failed"'
        - cp -r docs/* public
    artifacts:
        paths:
            - public
        expire_in: 30 days

pages:
    stage: deploy
    script:
        - echo "deployment with cache"
    artifacts:
        paths:
            - public
    only:
        - master
        - production
        - test-ci
